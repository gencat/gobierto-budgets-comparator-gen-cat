<% place_type = PlaceDecorator.place_type(places_collection_key) %>
<h2 class="section_heading"><%= t(".#{places_collection_key}.compare") %></h2>

<%= form_tag '#', id: 'compare_form' do %>

  <%= image_tag('illustrations/integra.jpg') %>

  <p class="center"><%= t(".#{places_collection_key}.select") %></p>

  <input type="text" class="search_compare" value="" placeholder="<%= t(".#{places_collection_key}.search", n: 1) %>" name="place1" />
  <input type="text" class="search_compare" value="" placeholder="<%= t(".#{places_collection_key}.search", n: 2) %>" name="place2" />
  <input type="text" class="search_compare" value="" placeholder="<%= t(".#{places_collection_key}.search", n: 3) %>" name="place3" />

  <%= submit_tag t('.compare'), disabled: "true" %>

<% end %>

<div class="examples center">

  <p><%= t('.check_some_examples') %></p>

  <ul>
    <%
      examples = {
        ine: [
          ["Coruña + Pontevedra + Lugo + Ferrol", "coruna-a:pontevedra:lugo:ferrol"],
          ["Madrid + Barcelona + Valencia + Sevilla", "madrid:barcelona:valencia:sevilla"]
        ],
        deputation_eu: [
          ["Vizcaya + Álava + Guipúzcoa", "dip-bizkaia:dip-alava:dip-gipuzkoa"]
        ]
      }
    %>
    <% examples[places_collection_key].each do |text, slugs| %>
      <li><%= link_to text, locations_places_compare_path(slugs, GobiertoBudgets::SearchEngineConfiguration::Year.last, "G", "economic"), class: "button" %></li>
    <% end %>
  </ul>

  <p><%= link_to t('.how_it_works'), '', class: 'toggle_div', data: { target: 'how_it_works' } %></strong></p>

  <div class="how_it_works" style="display: none;">

    <p><%= t(".#{places_collection_key}.description") %></p>

    <%= image_tag 'gobierto_compare_demo.gif', width: '100%' %>

  </div>
</div>

<% content_for(:javascript) do %>

function extractFormParameters($sel){
  var slugs = [];
  $sel.serializeArray().forEach(function(e){
    if(/^place/.test(e.name) && e.value !== ""){
      slugs.push(e.value);
    }
  });
  return slugs;
}

var searchOptions = {
  lookup: function (query, done) {
    $.ajax('<%= Settings.places_file || "/places.json" %>', {
      complete: function(data) {
        var suggestions = data.responseJSON.filter(function(result){
        return result.data.type == '<%= place_type %>' && (
          result.value.indexOf(query) !== -1 ||
          result.data.slug.indexOf(query) !== -1 ||
          result.value.toLowerCase().indexOf(query) !== -1
        )
        });
        var result = {
          suggestions: suggestions
        };
        done(result);
      }
    })
  },
  onSelect: function(suggestion) {
    if(suggestion.data.type == '<%= place_type %>') {
      ga('send', 'event', 'Compare Search', 'Click', 'Search', {nonInteraction: true});
      if(mixpanel.length > 0) {
        mixpanel.track('Compare Search', { '<%= place_type %>': suggestion.data.slug});
      }
      $(this).val(suggestion.data.slug);
      $(this).nextAll('input[type!=hidden]').first().focus();

      if(extractFormParameters($('form')).length > 1) {
        $('form input:submit').attr('disabled', false);
      }
    }
  },
  groupBy: 'category'
};

$('.search_compare').autocomplete($.extend({}, AUTOCOMPLETE_DEFAULTS(), searchOptions));

$('#compare_form').on('submit', function(e){
  e.preventDefault();
  var slugs = extractFormParameters($(this));
  if(slugs.length > 0) {
    Turbolinks.visit('<%= locations_compare_path %>/' + slugs.join(':') + '/<%= Date.today.year - 1 %>/G/functional');
  }
});

<% end %>
